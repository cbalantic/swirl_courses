- Class: meta
  Course: Fledglings
  Lesson: Lecture_1
  Author: Cathleen Balantic
  Type: Standard
  Organization: VTCFWRU UVM
  Version: 2.4.3
  
- Class: text
  Output: Welcome to NR/WFB 295/395. Let's play with some data. 
  
- Class: text
  Output: We've loaded in a dataset called 'babynames' that comes with the R software. Provided by the United States Social Security Administration, this dataset contains all names used for at least 5 children in the U.S. in each year from 1880-2015.
    
- Class: text
  Output: Let's check out the first few records of the data frame. 
  
- Class: cmd_question
  Output: Enter head(babynames, 20) into the console
  CorrectAnswer: head(babynames, 20) 
  AnswerTests: omnitest(correctExpr = "head(babynames, 20)")
  Hint: Type or copy head(babynames, 20) into the console and press enter.

- Class: text
  Output: See the output? The command head(babynames, 20) shows us the first 20 records of the babynames dataset. Let's look at the last 20 records next using the tail() function.
    
- Class: cmd_question
  Output: Enter tail(babynames, 20) into the console
  CorrectAnswer: tail(babynames, 20) 
  AnswerTests: omnitest(correctExpr = "tail(babynames, 20)")
  Hint: Type or copy tail(babynames, 20) into the console and press enter.
  
- Class: text
  Output: Did you notice that this dataset contains 1858689 rows? If you look at the very last record, you see that in 2015, there were five babies named Zyus, which is only a tiny proportion of the total baby names for that year. 
    
- Class: text
  Output: Now, you're going to select and keep only the records containing your name (if there are any)!

- Class: cmd_question
  Output: First, assign your name to a variable called my.name. 
    You will do this by entering my.name <- 'Cathleen' into the console (replace Cathleen with your name -- make sure it is capitalized and in quotation marks!).
  CorrectAnswer: NULL
  AnswerTests: creates_new_var()
  Hint: ""
  
- Class: text
  Output: Look at the box in the upper left-hand corner of RStudio, under the 'Environment' tab. A variable called 'my.name' should have appeared beneath the babynames variable. Do you see it there? (If not, quit the lesson by typing bye() into the console and start over!)
    
- Class: text
  Output: Now, you'll create a data frame that is a subset of the babynames data frame. It will only contain records that have your name.

- Class: cmd_question
  Output: Enter my.name.subset <- babynames[which(babynames$name == my.name), ]
  CorrectAnswer: my.name.subset <- babynames[which(babynames$name == my.name), ]
  AnswerTests: omnitest(correctExpr="my.name.subset <- babynames[which(babynames$name == my.name), ]")
  Hint: Type or copy my.name.subset <- babynames[which(babynames$name == my.name), ] into the console and press enter. Pay attention to case, spacing, and punctuation!

- Class: text
  Output: The line of code you just typed created a variable named 'my.name.subset'. Did you see it show up in your Environment tab? Your subset contains ONLY rows of data for which the 'name' column matches your name. It keeps all columns, which is why there is a comma before the closing square bracket. 

- Class: cmd_question
  Output: Use the head() function again to check the first 10 records of 'my.name.subset'.
  CorrectAnswer: head(my.name.subset, 10)
  AnswerTests: omnitest(correctExpr = "head(my.name.subset, 10)")
  Hint: Type or copy head(my.name.subset, 10) into the console and press enter. 
  
- Class: text
  Output: If there are NO records in this data frame, it's because your name was not used in the U.S. more than 5 times in one year between 1880-2015! Quit the lesson and start over from the beginning by entering bye() and then swirl(). (don't worry, this isn't a race). Pick any common name that comes to mind, or try a more commonly used spelling of your name if there is one!

- Class: text
  Output: Let's plot the popularity of your name in the U.S. over time. 

- Class: cmd_question
  Output: Enter plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'black')
  CorrectAnswer: plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'black')
  AnswerTests: omnitest(correctExpr="plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'black')")
  Hint: Type or copy plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'black') into the console and press enter.

- Class: text
  Output: Check to make sure your plot shows up in the lower left-hand RStudio panel under the Plots tab.
  
- Class: text
  Output: You can change the color of your plot! Next, you'll try blue instead of black. 

- Class: cmd_question
  Output: Enter plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'blue')
  CorrectAnswer: plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'blue')
  AnswerTests: omnitest(correctExpr="plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'blue')")
  Hint: Type or copy plot(x = my.name.subset$year, y = my.name.subset$n, type = 'l', xlab = 'Year', ylab = 'N', main = my.name, col = 'blue') into the console and press enter.

- Class: text
  Output: But we can make a prettier plot than that. Try the following.
  
- Class: cmd_question
  Output: Enter library(ggplot2)
  CorrectAnswer: library(ggplot2)
  AnswerTests: omnitest(correctExpr = "library(ggplot2)")
  Hint: Type or copy library(ggplot2)
  
- Class: text
  Output: You just called a function named library() that brought in an R software extension named ggplot2, which helps us make nice plots. 
  
- Class: cmd_question
  Output: Enter g <- ggplot(my.name.subset, aes(year, n)) + geom_bar(stat = 'identity') + ggtitle(my.name)
  CorrectAnswer: g <- ggplot(my.name.subset, aes(year, n)) + geom_bar(stat = 'identity') + ggtitle(my.name)
  AnswerTests: omnitest(correctExpr="g <- ggplot(my.name.subset, aes(year, n)) + geom_bar(stat = 'identity') + ggtitle(my.name)")
  Hint: Type or copy g <- ggplot(my.name.subset, aes(year, n)) + geom_bar(stat = 'identity') + ggtitle(my.name)

- Class: cmd_question
  Output: Enter print(g)
  CorrectAnswer: print(g)
  AnswerTests: omnitest(correctExpr="print(g)")
  Hint: Type or copy print(g)
  
- Class: text
  Output: Cool! That's it for now. You'll learn a lot more about libraries, packages, functions, plotting, and data management in future labs. 
